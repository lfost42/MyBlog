@using Blog.Data.Databases.Interfaces
@using Blog.Data.Models
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common

@inject IImageService imageService

@model IPagedList<ArticleModel>

@{
    ViewData["Title"] = "Article Index";
}

@foreach (var item in Model.Take(1))
{
    <h3>@item.SeriesModel.Title Articles</h3> 
}


@if (User.IsInRole("Owner"))
{
    <p>
        <a asp-action="Create" class="owner">Edit</a>
    </p>
}

<div class="container">
    <div class="row">

        @foreach (var item in Model.Take(1))
        {
            <div class="col-lg-12 mx-auto mb-2">
                <div class="card p-4 h-100">
                    <a asp-controller="Articles" asp-action="Details" asp-route-slug="@item.Slug">

                        @if (item.Image != null)
                        {
                            <img src="@imageService.DecodeImage(item.Image.ImageData, item.Image.ImageExtension)" class="card-img-top" />
                        }
                    </a>
                    <div class="card-body text-start h-100">
                        @item.SeriesModel.Title
                        <h5 class="card-title">@item.Title</h5>
                        <p class="card-text">@item.Summary</p>
                    </div>
                </div>
            </div>
        }


        @foreach (var item in Model.Skip(1))
        {
            <div class="col-lg-6 col-md-6 mx-auto mb-2 contents-justify-start">
                <div class="card p-4 h-100">
                    <a asp-controller="Articles" asp-action="Details" asp-route-slug="@item.Slug">

                        @if (item.Image != null)
                        {
                            <img src="@imageService.DecodeImage(item.Image.ImageData, item.Image.ImageExtension)" class="card-img-top" />
                        }
                    </a>
                    <div class="card-body text-start h-100">
                        @item.SeriesModel.Title
                        <h5 class="card-title">@item.Title</h5>
                        <p class="card-text">@item.Summary</p>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@if (Model.PageCount > 1)
{
    <hr />
    <div class="row">
        <div class="col h3">
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
        </div>
    </div>

    <div class="row">
        <div class="col">
            @Html.PagedListPager(Model, page => Url.Action("ArticleIndex", new { id = Model.FirstOrDefault().SeriesModelId }),
            new PagedListRenderOptions
            {
                LiElementClasses = new string[] { "page-item" },
                PageClasses = new string[] { "page-link" }
            })
        </div>
    </div>
}